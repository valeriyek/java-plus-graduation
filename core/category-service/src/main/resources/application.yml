spring:
  application:
    # Имя микросервиса.
    # Используется при регистрации в Eureka и при обращении к Config Server.
    name: category-service
  config:
    # Подключаем Spring Cloud Config Server как источник конфигурации.
    import: "configserver:"
  cloud:
    config:
      # Если Config Server недоступен — сервис упадёт при старте (fail-fast).
      fail-fast: true
      retry:
        # Повторные попытки подключения с рандомной паузой.
        useRandomPolicy: true
        # Максимальная пауза между ретраями — 6 секунд.
        max-interval: 6000
      discovery:
        # Config Server ищется через Eureka по serviceId, а не по URL.
        enabled: true
        serviceId: config-server

eureka:
  client:
    serviceUrl:
      # Адрес Eureka Server (по умолчанию localhost:8761).
      defaultZone: http://${eureka.instance.hostname:localhost}:${eureka.instance.port:8761}/eureka/
  instance:
    # Регистрироваться по IP, а не hostname.
    preferIpAddress: true
    # Hostname инстанса (по умолчанию localhost).
    hostname: localhost
    # Уникальный ID сервиса в Eureka: <имя_сервиса>:<random>.
    instance-id: "${spring.application.name}:${random.value}"
    # Частота отправки heartbeat в Eureka (по умолчанию 30с, здесь 10с).
    leaseRenewalIntervalInSeconds: 10